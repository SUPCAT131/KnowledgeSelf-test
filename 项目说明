项目目标：
    实现 模拟问答式面试的考试 程序
项目实现逻辑：
    1. 使用sqlite3数据库 记录考试的内容
    2. 使用图形化界面进行沉浸式答题
    3. 使用 openAI 给出答案的相关性评判
    4. 使用BS模型搭建局域网式并发服务器（待定）
    5. 加入定时器等限制(待定)
    6. 开发服务端内容(待定)
#1. 数据库
服务器端
    题目库：
        字段1 KEY INT 编号
        字段2 TEXT 大类
        字段3 TEXT 大类下的小类
        字段4 TEXT 题目
        字段5 TEXT 参考答案
        字段6 INT 出题次数
        字段7 INT 总分数
        字段8 DOUBLE 平均分
    用户库：(待定)
        字段1 KEY INT 编号
        字段2 fd INT 标识用户文件描述符
        字段3 TEXT 帐户
        字段4 TEXT 密码
        字段5 times INT 参与答题次数
        字段6 grades DOUBEL 最近一次答题分数
用户端：(待定)
    用户库：(待定)
        // 字段1 KEY INT 编号
        // 字段2 fd INT 标识用户文件描述符
        字段3 TEXT 帐户
        字段4 TEXT 密码
        字段5 times INT 参与答题次数
        字段6 grades DOUBEL 最近一次答题分数
    分数库：
        字段1:日期-时间
        字段2:分数
        字段3:答题时间
    题目库：
        字段1 KEY INT 编号
        字段2 TEXT 大类
        字段3 TEXT 大类下的小类
        字段4 TEXT 题目
        字段5 TEXT 参考答案
        字段6 INT 出题次数
        字段7 INT 总分数
        字段8 DOUBLE 平均分


// 目前目标 点击提交后 将与python通信操作 放在新线程中 当结果返回时 将结果存储到 静态全局变量 结果list(i)的位置中
添加逻辑
1. 点击抽取 抽取按钮 将设置为 不可点击态
2. 点击提交后 输入回答框将变为 不可编辑态 同时 提交按钮 变为提交分数按钮
3. 点击保存 回答将保存在全局列表的对应位置内
